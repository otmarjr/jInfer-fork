/*
 *  Copyright (C) 2011 sviro
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cz.cuni.mff.ksi.jinfer.base.objects;

import cz.cuni.mff.ksi.jinfer.base.interfaces.NamedModule;
import java.util.List;
import javax.swing.JPanel;

/**
 * Panel defining virtual category in Project properties.
 * Each panel contains List of {@link NamedModule} instances,
 * defining for what kind of modules categories is virtual category
 * defined by this panel parent for. This informations are displayed in this panel.
 * 
 * @author sviro
 */
public class VirtualCategoryPanel extends JPanel {

  private static final long serialVersionUID = 5645634634l;

  private final String overallLabel;
  private final String categoryId;
  private final String categoryName;

  /**
   * Default Constructor for Virtual category panel.
   *
   * @param categoryId Id of this panel category.
   * @param categoryName Name displayed in category tree for this panel.
   * @param modules List of NamedModule instances which categories are children of this category.
   */
  public VirtualCategoryPanel(final String categoryId, final String categoryName, final List<? extends NamedModule> modules) {
    super();
    this.categoryId = categoryId;
    this.categoryName = categoryName;
    this.overallLabel = getOverallLabel(modules);
    initComponents();
  }

  private String getOverallLabel(final List<? extends NamedModule> modules) {
    final StringBuilder builder = new StringBuilder();
    if (modules != null) {
      final boolean isOne = modules.size() == 1;
      builder.append("<html>There ");
      builder.append(isOne ? "is " : "are ");
      builder.append("currently ").append(modules.size()).append(" ");
      builder.append(categoryName).append(" installed: ");

      boolean first = true;
      for (int i = 0; i < modules.size(); i++) {
        final String module = modules.get(i).getDisplayName();

        if (first) {
          first = false;
        } else {
          builder.append((i != modules.size() - 1) ? ", " : " and ");
        }
        builder.append("<b>").append(module).append("</b>");
      }

      builder.append(".<br/><br/>")
              .append("Nodes under this one provide configuration for ")
              .append(categoryName).append(" that need it.");

      builder.append("</html>");
    }
    return builder.toString();
  }

  /**
   * Get Id of the category for this panel.
   * @return Id of the category.
   */
  public String getCategoryId() {
    return categoryId;
  }

  /**
   * Get display name of the category for this panel.
   * @return Display name of the category.
   */
  public String getCategoryName() {
    return categoryName;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings({"unchecked", "PMD"})
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();

    jLabel1.setText(overallLabel);
    jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel1;
  // End of variables declaration//GEN-END:variables
}
