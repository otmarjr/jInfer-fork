%!PS-Adobe-2.0 EPSF-2.0
%%Title: gnuplot-script.plt.eps
%%Creator: gnuplot 4.5 patchlevel 0
%%CreationDate: Sat Aug 27 18:40:55 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (gnuplot-script.plt.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.5 patchlevel 0)
  /Author (vektor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Aug 27 18:40:55 2011)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
938 448 M
63 0 V
stroke
854 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
938 714 M
31 0 V
-31 352 R
31 0 V
-31 181 R
31 0 V
-31 86 R
63 0 V
stroke
854 1333 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
938 1599 M
31 0 V
-31 352 R
31 0 V
-31 180 R
31 0 V
-31 86 R
63 0 V
stroke
854 2217 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
938 2483 M
31 0 V
-31 353 R
31 0 V
-31 180 R
31 0 V
-31 86 R
63 0 V
stroke
854 3102 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
938 3368 M
31 0 V
-31 352 R
31 0 V
-31 181 R
31 0 V
-31 85 R
63 0 V
stroke
854 3986 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
1.000 UL
LTb
938 4253 M
31 0 V
-31 352 R
31 0 V
-31 180 R
31 0 V
-31 86 R
63 0 V
stroke
854 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MRshow
1.000 UL
LTb
1439 448 M
0 63 V
stroke
1439 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2440 448 M
0 63 V
stroke
2440 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
3442 448 M
0 63 V
stroke
3442 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
4443 448 M
0 63 V
stroke
4443 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
5445 448 M
0 63 V
stroke
5445 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
6446 448 M
0 63 V
stroke
6446 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
938 4871 M
938 448 L
6009 0 V
0 4423 R
-6009 0 R
stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Time [ms])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3942 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Input graph: vertex count)]
] -46.7 MCshow
LTb
0.500 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 1213 1558 202 21 BoxColFill
LCb setrgbcolor
1314 1536 M
0 22 V
0 21 R
0 20 V
stroke
1213 1558 N
202 0 V
0 21 V
-202 0 V
0 -21 V
Z stroke
1251 1599 M
126 0 V
-126 -63 R
126 0 V
-164 22 R
202 0 V
1314 1618 Crs
1188 1618 Crs
1314 1653 Crs
1314 1728 Crs
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
0.250 1464 1902 200 106 BoxColFill
LCb setrgbcolor
1564 1779 M
0 123 V
0 106 R
0 109 V
stroke
1464 1902 N
200 0 V
0 106 V
-200 0 V
0 -106 V
Z stroke
1501 2117 M
126 0 V
1501 1779 M
126 0 V
-163 198 R
200 0 V
1564 1728 Pls
1564 2168 Pls
1564 2468 Pls
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 1714 1579 200 39 BoxColFill
LCb setrgbcolor
1814 1558 M
0 21 V
0 39 R
0 51 V
stroke
1714 1579 N
200 0 V
0 39 V
-200 0 V
0 -39 V
Z stroke
1751 1669 M
126 0 V
1751 1558 M
126 0 V
-163 41 R
200 0 V
1814 1700 Crs
% End plot #3
% Begin plot #4
0.500 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
0.250 1965 1927 200 100 BoxColFill
LCb setrgbcolor
2065 1910 M
0 17 V
0 100 R
0 95 V
stroke
1965 1927 N
200 0 V
0 100 V
-200 0 V
0 -100 V
Z stroke
2002 2122 M
126 0 V
2002 1910 M
126 0 V
-163 21 R
200 0 V
% End plot #4
% Begin plot #5
0.500 UP
stroke
LT1
/Helvetica findfont 140 scalefont setfont
0.250 2215 1618 200 35 BoxColFill
LCb setrgbcolor
2315 1599 M
0 19 V
0 35 R
0 47 V
stroke
2215 1618 N
200 0 V
0 35 V
-200 0 V
0 -35 V
Z stroke
2252 1700 M
126 0 V
2252 1599 M
126 0 V
-163 37 R
200 0 V
2315 1767 Crs
% End plot #5
% Begin plot #6
0.500 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
0.250 2465 1935 202 111 BoxColFill
LCb setrgbcolor
2566 1825 M
0 110 V
0 111 R
0 85 V
stroke
2465 1935 N
202 0 V
0 111 V
-202 0 V
0 -111 V
Z stroke
2503 2131 M
126 0 V
2503 1825 M
126 0 V
-164 126 R
202 0 V
% End plot #6
% Begin plot #7
0.500 UP
stroke
LT1
/Helvetica findfont 140 scalefont setfont
0.250 2716 1755 200 36 BoxColFill
LCb setrgbcolor
2816 1742 M
0 13 V
0 36 R
0 34 V
stroke
2716 1755 N
200 0 V
0 36 V
-200 0 V
0 -36 V
Z stroke
2753 1825 M
126 0 V
-126 -83 R
126 0 V
-163 25 R
200 0 V
2816 1875 Crs
% End plot #7
% Begin plot #8
0.500 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
0.250 2966 2063 200 12 BoxColFill
LCb setrgbcolor
3066 2058 M
0 5 V
0 12 R
0 16 V
stroke
2966 2063 N
200 0 V
0 12 V
-200 0 V
0 -12 V
Z stroke
3003 2091 M
126 0 V
-126 -33 R
126 0 V
-163 11 R
200 0 V
3066 1951 Pls
3066 1959 Pls
3066 1966 Pls
2940 1966 Pls
3066 1973 Pls
2940 1973 Pls
3066 2040 Pls
3066 2127 Pls
2940 2127 Pls
3066 2150 Pls
2940 2150 Pls
% End plot #8
% Begin plot #9
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 3216 1927 202 61 BoxColFill
LCb setrgbcolor
3317 1875 M
0 52 V
0 61 R
0 75 V
stroke
3216 1927 N
202 0 V
0 61 V
-202 0 V
0 -61 V
Z stroke
3254 2063 M
126 0 V
3254 1875 M
126 0 V
-164 84 R
202 0 V
% End plot #9
% Begin plot #10
0.500 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
0.250 3467 2122 200 67 BoxColFill
LCb setrgbcolor
3567 2086 M
0 36 V
0 67 R
0 61 V
stroke
3467 2122 N
200 0 V
0 67 V
-200 0 V
0 -67 V
Z stroke
3504 2250 M
126 0 V
3504 2086 M
126 0 V
-163 62 R
200 0 V
3567 2303 Pls
% End plot #10
% Begin plot #11
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 3717 2290 200 86 BoxColFill
LCb setrgbcolor
3817 2221 M
0 69 V
0 86 R
0 96 V
stroke
3717 2290 N
200 0 V
0 86 V
-200 0 V
0 -86 V
Z stroke
3754 2472 M
126 0 V
3754 2221 M
126 0 V
-163 117 R
200 0 V
% End plot #11
% Begin plot #12
0.500 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
0.250 3968 2390 200 80 BoxColFill
LCb setrgbcolor
4068 2290 M
0 100 V
0 80 R
0 80 V
stroke
3968 2390 N
200 0 V
0 80 V
-200 0 V
0 -80 V
Z stroke
4005 2550 M
126 0 V
4005 2290 M
126 0 V
-163 144 R
200 0 V
% End plot #12
% Begin plot #13
0.500 UP
stroke
LT1
/Helvetica findfont 140 scalefont setfont
0.250 4218 2776 200 109 BoxColFill
LCb setrgbcolor
4318 2613 M
0 163 V
0 109 R
0 113 V
stroke
4218 2776 N
200 0 V
0 109 V
-200 0 V
0 -109 V
Z stroke
4255 2998 M
126 0 V
4255 2613 M
126 0 V
-163 212 R
200 0 V
% End plot #13
% Begin plot #14
0.500 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
0.250 4468 2789 202 126 BoxColFill
LCb setrgbcolor
4569 2701 M
0 88 V
0 126 R
0 162 V
stroke
4468 2789 N
202 0 V
0 126 V
-202 0 V
0 -126 V
Z stroke
4506 3077 M
126 0 V
4506 2701 M
126 0 V
-164 136 R
202 0 V
% End plot #14
% Begin plot #15
0.500 UP
stroke
LT1
/Helvetica findfont 140 scalefont setfont
0.250 4719 3058 200 124 BoxColFill
LCb setrgbcolor
4819 2906 M
0 152 V
0 124 R
0 132 V
stroke
4719 3058 N
200 0 V
0 124 V
-200 0 V
0 -124 V
Z stroke
4756 3314 M
126 0 V
4756 2906 M
126 0 V
-163 208 R
200 0 V
4819 2862 Crs
% End plot #15
% Begin plot #16
0.500 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
0.250 4969 3123 200 101 BoxColFill
LCb setrgbcolor
5069 3019 M
0 104 V
0 101 R
0 126 V
stroke
4969 3123 N
200 0 V
0 101 V
-200 0 V
0 -101 V
Z stroke
5006 3350 M
126 0 V
5006 3019 M
126 0 V
-163 144 R
200 0 V
5069 3380 Pls
% End plot #16
% Begin plot #17
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 5219 3422 202 148 BoxColFill
LCb setrgbcolor
5320 3269 M
0 153 V
0 148 R
0 168 V
stroke
5219 3422 N
202 0 V
0 148 V
-202 0 V
0 -148 V
Z stroke
5257 3738 M
126 0 V
5257 3269 M
126 0 V
-164 211 R
202 0 V
% End plot #17
% Begin plot #18
0.500 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
0.250 5470 3479 200 95 BoxColFill
LCb setrgbcolor
5570 3406 M
0 73 V
0 95 R
0 115 V
stroke
5470 3479 N
200 0 V
0 95 V
-200 0 V
0 -95 V
Z stroke
5507 3689 M
126 0 V
5507 3406 M
126 0 V
-163 115 R
200 0 V
5570 3235 Pls
5570 3719 Pls
5570 3841 Pls
% End plot #18
% Begin plot #19
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 5720 4241 200 151 BoxColFill
LCb setrgbcolor
5820 4069 M
0 172 V
0 151 R
0 99 V
stroke
5720 4241 N
200 0 V
0 151 V
-200 0 V
0 -151 V
Z stroke
5757 4491 M
126 0 V
5757 4069 M
126 0 V
-163 223 R
200 0 V
% End plot #19
% Begin plot #20
0.500 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
0.250 5971 4276 200 128 BoxColFill
LCb setrgbcolor
6071 4100 M
0 176 V
0 128 R
0 121 V
stroke
5971 4276 N
200 0 V
0 128 V
-200 0 V
0 -128 V
Z stroke
6008 4525 M
126 0 V
6008 4100 M
126 0 V
-163 241 R
200 0 V
6071 4600 Pls
% End plot #20
% Begin plot #21
0.500 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
0.250 6221 4552 200 146 BoxColFill
LCb setrgbcolor
6321 4394 M
0 158 V
0 146 R
0 158 V
stroke
6221 4552 N
200 0 V
0 146 V
-200 0 V
0 -146 V
Z stroke
6258 4856 M
126 0 V
6258 4394 M
126 0 V
-163 218 R
200 0 V
% End plot #21
% Begin plot #22
0.500 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
0.250 6471 4583 202 139 BoxColFill
LCb setrgbcolor
6572 4397 M
0 186 V
0 139 R
0 149 V
stroke
6471 4583 N
202 0 V
0 139 V
-202 0 V
0 -139 V
Z stroke
6509 4397 M
126 0 V
-164 251 R
202 0 V
% End plot #22
stroke
LTb
938 4871 M
938 448 L
6009 0 V
0 4423 R
-6009 0 R
0.500 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
