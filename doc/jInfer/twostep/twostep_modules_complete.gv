digraph twostep_modules_complete {
	node [shape = rectangle, fontname = "TeXGyrePagella-Regular", fontsize = 21];
	edge [fontname = "TeXGyrePagella-Regular", fontsize = 21, arrowhead = empty];
	size = "17.5, 17.5";
	rankdir = BT;

/* TwoStep modules */
	TwoStepSimplifier [style = rounded];
	Clusterer -> TwoStepSimplifier [label = "is submodule"];
	ClusterProcessor -> TwoStepSimplifier [label = "is submodule"];
	RegularExpressionCleaner -> TwoStepSimplifier [label = "is submodule"];

	ClustererWithAttributes -> Clusterer [label = "extends interface"];
	Iname [style = "rounded,filled"];
	Iname -> ClustererWithAttributes [label = "implements"];
	
	Alternations [style = rounded];
	Alternations -> ClusterProcessor [label = "implements"];
	
	AutomatonMergingState [style = rounded];
	AutomatonMergingState -> ClusterProcessor [label = "implements"];
	
	PassRepresentant [style = rounded];
	PassRepresentant -> ClusterProcessor [label = "implements"];
	
	Trie [style = rounded];
	Trie -> ClusterProcessor [label = "implements"];

	Null [style = "rounded,filled"];
	Null -> RegularExpressionCleaner [label = "implements"];

	EmptyChildren [style = rounded];
	EmptyChildren -> RegularExpressionCleaner [label = "implements"];

	NestedConcatenation [style = rounded];
	NestedConcatenation -> RegularExpressionCleaner [label = "implements"];

	Chained [style = rounded];
	Chained -> RegularExpressionCleaner [label = "implements"];

	ClusterProcessor -> ClustererWithAttributes [style = invis];
	ClusterProcessor -> Null [style = invis];
	ClusterProcessor -> EmptyChildren [style = invis];
	ClusterProcessor -> NestedConcatenation [style = invis];
	ClusterProcessor -> Chained [style = invis];

/* AutomatonMergingState modules */
	AutomatonMergingState [style = "rounded,filled"];
	AutomatonSimplifier -> AutomatonMergingState [label = "is submodule"];
	RegexpAutomatonSimplifier -> AutomatonMergingState [label = "is submodule"];
	MergeConditionTester -> AutomatonMergingState [label = "is submodule"];

	Greedy [style = "rounded,filled"];
	Greedy -> AutomatonSimplifier [label = "implements"];
	
	StateRemoval [style = rounded];
	StateRemoval -> RegexpAutomatonSimplifier [label = "implements"];
	
	KHContext [style = "rounded,filled"];
	KHContext -> MergeConditionTester [label = "implements"];
	
	Greedy -> KHContext [label = "uses"];

	UserInteractive [style = rounded];
	UserInteractive -> AutomatonSimplifier [label = "implements"];
	
	
/* StateRemoval modules */
	StateRemoval [style = "rounded,filled"];
	Orderer -> StateRemoval [label = "is submodule"];

	Weighted [style = "rounded,filled"];
	Weighted -> Orderer [label = "implements"];	
}
