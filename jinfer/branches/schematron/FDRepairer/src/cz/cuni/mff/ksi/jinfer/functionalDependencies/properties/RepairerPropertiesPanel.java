/*
 * Copyright (C) 2011 sviro
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cz.cuni.mff.ksi.jinfer.functionalDependencies.properties;

import cz.cuni.mff.ksi.jinfer.base.interfaces.NamedModule;
import cz.cuni.mff.ksi.jinfer.base.objects.AbstractPropertiesPanel;
import cz.cuni.mff.ksi.jinfer.base.objects.ProjectPropsComboRenderer;
import cz.cuni.mff.ksi.jinfer.base.utils.ModuleSelectionHelper;
import cz.cuni.mff.ksi.jinfer.functionalDependencies.interfaces.RepairPicker;
import cz.cuni.mff.ksi.jinfer.functionalDependencies.interfaces.Repairer;
import cz.cuni.mff.ksi.jinfer.functionalDependencies.newRepairer.NewRepairerImpl;
import cz.cuni.mff.ksi.jinfer.functionalDependencies.newRepairer.RepairPickerImpl;
import java.util.Properties;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author sviro
 */
public class RepairerPropertiesPanel extends AbstractPropertiesPanel {
  
  private static final long serialVersionUID = 123445353L;
  public static final String NAME = "repairer";
  public static final String REPAIRER_PROP = "repairer_prop";
  public static final String REPAIR_PICKER_PROP = "repair_picker_prop";
  public static final String REPAIRER_DEFAULT = "old_repairer";
  public static final String REPAIR_PICKER_DEFAULT = RepairPickerImpl.NAME;
  public static final String COEFF_K_PROP = "coeff_k_prop";
  public static final String COEFF_K_DEFAULT = "1.5";
  public static final String THRESHOLD_T_PROP = "threshold_t_prop";
  public static final String THRESHOLD_T_DEFAULT = "1";

  /** Creates new form RepairerPropertiesPanel */
  public RepairerPropertiesPanel(final Properties properties) {
    super(properties);
    initComponents();
  }

  @Override
  public void store() {
    properties.setProperty(REPAIRER_PROP, ((NamedModule) repairer.getSelectedItem()).getName());
    properties.setProperty(REPAIR_PICKER_PROP, ((NamedModule) repairPicker.getSelectedItem()).getName());
    properties.setProperty(COEFF_K_PROP, coefficientK.getText());
    properties.setProperty(THRESHOLD_T_PROP, threshlodT.getText());
  }

  @Override
  public void load() {
    repairer.setModel(new DefaultComboBoxModel(ModuleSelectionHelper.lookupImpls(Repairer.class).toArray()));
    repairPicker.setModel(new DefaultComboBoxModel(ModuleSelectionHelper.lookupImpls(RepairPicker.class).toArray()));
    
    repairer.setSelectedItem(ModuleSelectionHelper.lookupImpl(Repairer.class, properties.getProperty(REPAIRER_PROP, REPAIRER_DEFAULT)));
    repairPicker.setSelectedItem(ModuleSelectionHelper.lookupImpl(RepairPicker.class, properties.getProperty(REPAIR_PICKER_PROP, REPAIR_PICKER_DEFAULT)));
    
    coefficientK.setText(properties.getProperty(COEFF_K_PROP, COEFF_K_DEFAULT));
    threshlodT.setText(properties.getProperty(THRESHOLD_T_PROP, THRESHOLD_T_DEFAULT));
  }
  
  

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jLabel1 = new javax.swing.JLabel();
    repairer = new javax.swing.JComboBox();
    jPanel1 = new javax.swing.JPanel();
    jPanel2 = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    repairPicker = new javax.swing.JComboBox();
    jLabel3 = new javax.swing.JLabel();
    coefficientK = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    threshlodT = new javax.swing.JTextField();

    setLayout(new java.awt.GridBagLayout());

    jLabel1.setText(org.openide.util.NbBundle.getMessage(RepairerPropertiesPanel.class, "RepairerPropertiesPanel.jLabel1.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    add(jLabel1, gridBagConstraints);

    repairer.setRenderer(new ProjectPropsComboRenderer(repairer.getRenderer()));
    repairer.setMinimumSize(new java.awt.Dimension(180, 22));
    repairer.setPreferredSize(new java.awt.Dimension(180, 22));
    repairer.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        repairerActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(repairer, gridBagConstraints);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 112, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 112, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 0.5;
    add(jPanel1, gridBagConstraints);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 188, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weighty = 1.0;
    add(jPanel2, gridBagConstraints);

    jLabel2.setText(org.openide.util.NbBundle.getMessage(RepairerPropertiesPanel.class, "RepairerPropertiesPanel.jLabel2.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    add(jLabel2, gridBagConstraints);

    repairPicker.setRenderer(new ProjectPropsComboRenderer(repairPicker.getRenderer()));
    repairPicker.setMinimumSize(new java.awt.Dimension(180, 22));
    repairPicker.setPreferredSize(new java.awt.Dimension(180, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(repairPicker, gridBagConstraints);

    jLabel3.setText(org.openide.util.NbBundle.getMessage(RepairerPropertiesPanel.class, "RepairerPropertiesPanel.jLabel3.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    add(jLabel3, gridBagConstraints);

    coefficientK.setText(org.openide.util.NbBundle.getMessage(RepairerPropertiesPanel.class, "RepairerPropertiesPanel.coefficientK.text")); // NOI18N
    coefficientK.setMinimumSize(new java.awt.Dimension(50, 26));
    coefficientK.setPreferredSize(new java.awt.Dimension(50, 26));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(coefficientK, gridBagConstraints);

    jLabel4.setText(org.openide.util.NbBundle.getMessage(RepairerPropertiesPanel.class, "RepairerPropertiesPanel.jLabel4.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    add(jLabel4, gridBagConstraints);

    threshlodT.setText(org.openide.util.NbBundle.getMessage(RepairerPropertiesPanel.class, "RepairerPropertiesPanel.threshlodT.text")); // NOI18N
    threshlodT.setMinimumSize(new java.awt.Dimension(50, 26));
    threshlodT.setPreferredSize(new java.awt.Dimension(50, 26));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(threshlodT, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void repairerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repairerActionPerformed
    Repairer selectedRepairer = (Repairer) repairer.getSelectedItem();
    if (selectedRepairer.getName().equals(NewRepairerImpl.NAME)) {
      setEditableNewRepairer(true);
    } else {
      setEditableNewRepairer(false);
    }
  }//GEN-LAST:event_repairerActionPerformed

  private void setEditableNewRepairer(final boolean editable) {
    repairPicker.setEnabled(editable);
      coefficientK.setEnabled(editable);
      threshlodT.setEnabled(editable);
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField coefficientK;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JComboBox repairPicker;
  private javax.swing.JComboBox repairer;
  private javax.swing.JTextField threshlodT;
  // End of variables declaration//GEN-END:variables
}
