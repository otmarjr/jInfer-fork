/*
 *  Copyright (C) 2010 reseto
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cz.cuni.mff.ksi.jinfer.base.options;

import cz.cuni.mff.ksi.jinfer.base.utils.LogLevelUtils;
import java.awt.Color;
import java.util.prefs.Preferences;
import javax.swing.JColorChooser;
import javax.swing.JPanel;
import org.openide.util.NbPreferences;

/**
 * Panel displaying options for setting logging levels and log colors in jInfer Option panel section.
 *
 * @author reseto
 */
@SuppressWarnings({"PMD.MethodArgumentCouldBeFinal", "PMD.SingularField", "PMD.UnusedFormalParameter"})
public final class LoggerPanel extends JPanel {

  private static final long serialVersionUID = 35345345456l;

  private final Preferences preferences = NbPreferences.forModule(LoggerPanel.class);
  public static final String INTERNAL_LOG_LEVEL = "log.level.console";
  public static final String EXTERNAL_LOG_LEVEL = "log.level.file";

  public static final String TRACE_COLOR = "trace.color";
  public static final String DEBUG_COLOR = "debug.color";
  public static final String INFO_COLOR = "info.color";
  public static final String WARN_COLOR = "warn.color";
  public static final String ERROR_COLOR = "error.color";
  public static final String FATAL_COLOR = "fatal.color";

  public LoggerPanel() {
    super();
    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("PMD")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jPanel3 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    panelTrace = new javax.swing.JPanel();
    panelDebug = new javax.swing.JPanel();
    panelInfo = new javax.swing.JPanel();
    panelWarn = new javax.swing.JPanel();
    panelError = new javax.swing.JPanel();
    panelFatal = new javax.swing.JPanel();
    jButton1 = new javax.swing.JButton();
    jPanel5 = new javax.swing.JPanel();
    jPanel4 = new javax.swing.JPanel();

    setLayout(new java.awt.GridBagLayout());

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jPanel3.border.title"))); // NOI18N
    jPanel3.setLayout(new java.awt.GridBagLayout());

    org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jLabel1.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    jPanel3.add(jLabel1, gridBagConstraints);

    org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jLabel2.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    jPanel3.add(jLabel2, gridBagConstraints);

    org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jLabel3.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    jPanel3.add(jLabel3, gridBagConstraints);

    org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jLabel4.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    jPanel3.add(jLabel4, gridBagConstraints);

    org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jLabel5.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    jPanel3.add(jLabel5, gridBagConstraints);

    org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jLabel6.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 2, 12);
    jPanel3.add(jLabel6, gridBagConstraints);

    panelTrace.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    panelTrace.setMaximumSize(new java.awt.Dimension(20, 20));
    panelTrace.setMinimumSize(new java.awt.Dimension(20, 20));
    panelTrace.setPreferredSize(new java.awt.Dimension(20, 20));
    panelTrace.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        panelTraceMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout panelTraceLayout = new javax.swing.GroupLayout(panelTrace);
    panelTrace.setLayout(panelTraceLayout);
    panelTraceLayout.setHorizontalGroup(
      panelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );
    panelTraceLayout.setVerticalGroup(
      panelTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    jPanel3.add(panelTrace, gridBagConstraints);

    panelDebug.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    panelDebug.setMaximumSize(new java.awt.Dimension(20, 20));
    panelDebug.setMinimumSize(new java.awt.Dimension(20, 20));
    panelDebug.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        panelDebugMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout panelDebugLayout = new javax.swing.GroupLayout(panelDebug);
    panelDebug.setLayout(panelDebugLayout);
    panelDebugLayout.setHorizontalGroup(
      panelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );
    panelDebugLayout.setVerticalGroup(
      panelDebugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    jPanel3.add(panelDebug, gridBagConstraints);

    panelInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    panelInfo.setMaximumSize(new java.awt.Dimension(20, 20));
    panelInfo.setMinimumSize(new java.awt.Dimension(20, 20));
    panelInfo.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        panelInfoMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
    panelInfo.setLayout(panelInfoLayout);
    panelInfoLayout.setHorizontalGroup(
      panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );
    panelInfoLayout.setVerticalGroup(
      panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    jPanel3.add(panelInfo, gridBagConstraints);

    panelWarn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    panelWarn.setMaximumSize(new java.awt.Dimension(20, 20));
    panelWarn.setMinimumSize(new java.awt.Dimension(20, 20));
    panelWarn.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        panelWarnMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout panelWarnLayout = new javax.swing.GroupLayout(panelWarn);
    panelWarn.setLayout(panelWarnLayout);
    panelWarnLayout.setHorizontalGroup(
      panelWarnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );
    panelWarnLayout.setVerticalGroup(
      panelWarnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    jPanel3.add(panelWarn, gridBagConstraints);

    panelError.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    panelError.setMaximumSize(new java.awt.Dimension(20, 20));
    panelError.setMinimumSize(new java.awt.Dimension(20, 20));
    panelError.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        panelErrorMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout panelErrorLayout = new javax.swing.GroupLayout(panelError);
    panelError.setLayout(panelErrorLayout);
    panelErrorLayout.setHorizontalGroup(
      panelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );
    panelErrorLayout.setVerticalGroup(
      panelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    jPanel3.add(panelError, gridBagConstraints);

    panelFatal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    panelFatal.setMaximumSize(new java.awt.Dimension(20, 20));
    panelFatal.setMinimumSize(new java.awt.Dimension(20, 20));
    panelFatal.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        panelFatalMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout panelFatalLayout = new javax.swing.GroupLayout(panelFatal);
    panelFatal.setLayout(panelFatalLayout);
    panelFatalLayout.setHorizontalGroup(
      panelFatalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );
    panelFatalLayout.setVerticalGroup(
      panelFatalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 18, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    jPanel3.add(panelFatal, gridBagConstraints);

    org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jButton1.text")); // NOI18N
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(2, 20, 2, 2);
    jPanel3.add(jButton1, gridBagConstraints);

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 239, Short.MAX_VALUE)
    );
    jPanel5Layout.setVerticalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 75, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    jPanel3.add(jPanel5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel3, gridBagConstraints);

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 543, Short.MAX_VALUE)
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 150, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weighty = 1.0;
    add(jPanel4, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void panelTraceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelTraceMouseClicked
    final Color c = JColorChooser.showDialog(LoggerPanel.this, "Choose the trace log color", panelTrace.
            getBackground());
    if (c != null) {
      panelTrace.setBackground(c);
    }
  }//GEN-LAST:event_panelTraceMouseClicked

  private void panelDebugMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelDebugMouseClicked
    final Color c = JColorChooser.showDialog(LoggerPanel.this, "Choose the debug log color", panelDebug.
            getBackground());
    if (c != null) {
      panelDebug.setBackground(c);
    }
  }//GEN-LAST:event_panelDebugMouseClicked

  private void panelInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelInfoMouseClicked
    final Color c = JColorChooser.showDialog(LoggerPanel.this, "Choose the info log color", panelInfo.
            getBackground());
    if (c != null) {
      panelInfo.setBackground(c);
    }
  }//GEN-LAST:event_panelInfoMouseClicked

  private void panelWarnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelWarnMouseClicked
    final Color c = JColorChooser.showDialog(LoggerPanel.this, "Choose the warn log color", panelWarn.
            getBackground());
    if (c != null) {
      panelWarn.setBackground(c);
    }
  }//GEN-LAST:event_panelWarnMouseClicked

  private void panelErrorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelErrorMouseClicked
    final Color c = JColorChooser.showDialog(LoggerPanel.this, "Choose the error log color", panelError.
            getBackground());
    if (c != null) {
      panelError.setBackground(c);
    }
  }//GEN-LAST:event_panelErrorMouseClicked

  private void panelFatalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFatalMouseClicked
    final Color c = JColorChooser.showDialog(LoggerPanel.this, "Choose the fatal log color", panelFatal.
            getBackground());
    if (c != null) {
      panelFatal.setBackground(c);
    }
  }//GEN-LAST:event_panelFatalMouseClicked

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    panelTrace.setBackground(LogLevelUtils.TRACE_DEFAULT);
    panelDebug.setBackground(LogLevelUtils.DEBUG_DEFAULT);
    panelInfo.setBackground(LogLevelUtils.INFO_DEFAULT);
    panelWarn.setBackground(LogLevelUtils.WARN_DEFAULT);
    panelError.setBackground(LogLevelUtils.ERROR_DEFAULT);
    panelFatal.setBackground(LogLevelUtils.FATAL_DEFAULT);
  }//GEN-LAST:event_jButton1ActionPerformed

  public void load() {
    panelTrace.setBackground(LogLevelUtils.getColorTrace());
    panelDebug.setBackground(LogLevelUtils.getColorDebug());
    panelInfo.setBackground(LogLevelUtils.getColorInfo());
    panelWarn.setBackground(LogLevelUtils.getColorWarn());
    panelError.setBackground(LogLevelUtils.getColorError());
    panelFatal.setBackground(LogLevelUtils.getColorFatal());
  }

  public void store() {
    preferences.put(TRACE_COLOR, String.valueOf(panelTrace.getBackground().getRGB()));
    preferences.put(DEBUG_COLOR, String.valueOf(panelDebug.getBackground().getRGB()));
    preferences.put(INFO_COLOR, String.valueOf(panelInfo.getBackground().getRGB()));
    preferences.put(WARN_COLOR, String.valueOf(panelWarn.getBackground().getRGB()));
    preferences.put(ERROR_COLOR, String.valueOf(panelError.getBackground().getRGB()));
    preferences.put(FATAL_COLOR, String.valueOf(panelFatal.getBackground().getRGB()));
  }

  public boolean valid() {
    return true;
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JPanel panelDebug;
  private javax.swing.JPanel panelError;
  private javax.swing.JPanel panelFatal;
  private javax.swing.JPanel panelInfo;
  private javax.swing.JPanel panelTrace;
  private javax.swing.JPanel panelWarn;
  // End of variables declaration//GEN-END:variables
}
