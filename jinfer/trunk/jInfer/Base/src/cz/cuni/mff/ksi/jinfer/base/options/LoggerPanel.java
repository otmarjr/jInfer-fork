/*
 *  Copyright (C) 2010 reseto
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cz.cuni.mff.ksi.jinfer.base.options;

import cz.cuni.mff.ksi.jinfer.base.utils.LogLevels;
import java.util.prefs.Preferences;
import org.openide.util.NbPreferences;

final class LoggerPanel extends javax.swing.JPanel {

  private final LoggerOptionsPanelController controller;
  private final Preferences preferences = NbPreferences.forModule(LoggerPanel.class);
  public static final String INTERNAL_LOG_LEVEL = "log.level.console";
  public static final String EXTERNAL_LOG_LEVEL = "log.level.file";

  LoggerPanel(LoggerOptionsPanelController controller) {
    this.controller = controller;
    initComponents();
    // TODO listen to changes in form fields and call controller.changed()
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    internalLabel = new javax.swing.JLabel();
    externalLabel = new javax.swing.JLabel();
    externalLogCombo = new javax.swing.JComboBox();
    internalLogCombo = new javax.swing.JComboBox();

    setPreferredSize(new java.awt.Dimension(400, 300));

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.jPanel1.border.title"))); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(internalLabel, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.internalLabel.text")); // NOI18N
    internalLabel.setToolTipText(org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.internalLabel.toolTipText")); // NOI18N

    org.openide.awt.Mnemonics.setLocalizedText(externalLabel, org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.externalLabel.text")); // NOI18N
    externalLabel.setToolTipText(org.openide.util.NbBundle.getMessage(LoggerPanel.class, "LoggerPanel.externalLabel.toolTipText")); // NOI18N

    externalLogCombo.setModel(LogLevels.getDefaultModel());

    internalLogCombo.setModel(LogLevels.getDefaultModel());

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(internalLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(internalLogCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(externalLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(externalLogCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(111, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(externalLabel)
          .addComponent(externalLogCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(internalLabel)
          .addComponent(internalLogCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(32, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(184, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  void load() {
    final String consoleLevel = preferences.get(INTERNAL_LOG_LEVEL, LogLevels.getConsoleThreshold());
    final String fileLevel = preferences.get(EXTERNAL_LOG_LEVEL, LogLevels.getFileThreshold());

    internalLogCombo.setSelectedItem(consoleLevel);
    externalLogCombo.setSelectedItem(fileLevel);

    LogLevels.setConsoleThreshold(consoleLevel);
    LogLevels.setFileThreshold(fileLevel);
  }

  void store() {
    final String consoleLevel = (String) internalLogCombo.getSelectedItem();
    final String fileLevel = (String) externalLogCombo.getSelectedItem();
    
    preferences.put(INTERNAL_LOG_LEVEL, consoleLevel);
    preferences.put(EXTERNAL_LOG_LEVEL, fileLevel);

    LogLevels.setConsoleThreshold(consoleLevel);
    LogLevels.setFileThreshold(fileLevel);
  }

  boolean valid() {
    // TODO check whether form is consistent and complete
    return true;
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel externalLabel;
  private javax.swing.JComboBox externalLogCombo;
  private javax.swing.JLabel internalLabel;
  private javax.swing.JComboBox internalLogCombo;
  private javax.swing.JPanel jPanel1;
  // End of variables declaration//GEN-END:variables
}
